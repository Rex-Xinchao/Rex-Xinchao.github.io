(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{397:function(n,e,s){"use strict";s.r(e);var t=s(42),a=Object(t.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[n._v("说明")]),n._v(" "),s("p",[n._v("docker 安装 jenkins 服务器配置至少 2 核 4G")])]),n._v(" "),s("h3",{attrs:{id:"安装-jenkins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-jenkins"}},[n._v("#")]),n._v(" 安装 jenkins")]),n._v(" "),s("ul",[s("li",[n._v("查看&下载 jenkins 镜像")])]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[n._v("docker serch jenkins\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## 官方推荐镜像")]),n._v("\ndocker pull jenkinsci/blueocean\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## 标准镜像")]),n._v("\ndocker pull jenkins/jenkins:lts\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## lts 长期支援的稳定版本")]),n._v("\n")])])]),s("ul",[s("li",[n._v("运行镜像")])]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[n._v("docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    --name jenkins-blueocean "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    -d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    -p "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("8080")]),n._v(":8080 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    -p "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("50000")]),n._v(":50000 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    jenkinsci/blueocean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## 或者")]),n._v("\ndocker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n  --name jenkins-blueocean "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n  -d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n  -p "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("8080")]),n._v(":8080 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n  -p "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("50000")]),n._v(":50000 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n  -v jenkins:/var/jenkins_home "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n  -v /etc/localtime:/etc/localtime "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n  jenkinsci/blueocean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## -d 后台运行镜像")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## -p 8081:8080 将镜像的8080端口映射到服务器的8081端口")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## -p 50000:50000 将镜像的50000端口映射到服务器的50000端口")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## -v jenkins:/var/jenkins_home /var/jenkins_home目录为jenkins工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## -v /etc/localtime:/etc/localtime 让容器使用和服务器同样的时间设置。")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("## --name jenkins 给容器起一个别名")]),n._v("\n")])])]),s("ul",[s("li",[s("p",[n._v("jenkins 插件安装和配置")]),n._v(" "),s("blockquote",[s("ul",[s("li",[n._v("推荐插件-NodeJS Plugin （在构建时使用 node 命令一定要配置 Node 环境）"),s("br"),n._v("\n需要在全局配置中配置 node 名称、是否自动安装、选择版本")]),n._v(" "),s("li",[n._v("推荐插件-Publish Over SSH （远程服务器的配置）"),s("br"),n._v("\n需要在配置页面填写服务器信息：名称、IP、用户名、服务器文件夹路径、登录密码、端口号和超时时间、并且勾选去掉 Disable exec")]),n._v(" "),s("li",[n._v("推荐插件-Build With Parameters （构建参数）"),s("br")])])])]),n._v(" "),s("li",[s("p",[n._v("jenkins 创建 Job")]),n._v(" "),s("blockquote",[s("p",[n._v("1、创建任务 -- 选择 Freestyle project"),s("br"),n._v("\n2、通用信息：描述、项目 Url。并勾选丢弃旧的构建（设置保持最大个数为 10）"),s("br"),n._v("\n3、通用信息：参数添加 version"),s("br"),n._v("\n4、源码管理：Git（填写 git 地址 && 配置 git 账号信息 && 选择分支名称）"),s("br"),n._v("\n5、构建环境：选择 Node 环境并选择全局配置过的 Node"),s("br"),n._v("\n6、构建：选择执行 shell"),s("br")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[n._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("npm")]),n._v(" run "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("npm")]),n._v(" run build\n")])])]),s("p",[n._v("7、构建：选择 Send files execute commands over SSH"),s("br")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('Name:服务器名称\nSource files:需要上传文件的路径 -- \\**/*代表该路径下的全部文件和文件夹 -- /\\*代表全部文件\nRemove prefix:需要移除的文件夹（上传路径中匹配的路径会被删除）\nRemote directory:上传到服务器上的路径（会拼接在你配置的路径后面）\n高级中勾选 Clean remote -- 每次上传前清空目标文件夹\nExec command:上传文件完成后执行的脚本\n# 停止并删除名称中带demo的容器\ndocker container stop `docker ps -f "name=demo" -a -q`\ndocker container rm `docker ps -f "name=demo" -a -q`\n# 删除名称中为demo的镜像\ndocker rmi `docker images -f  "reference=demo" -q`\ncd ../home/frontend\n# 生成镜像\ndocker image build ./ -t demo:${version}\ndocker container create --name demo${version} -p 80:80 -p 443:443 demo:${version}\ndocker container start `docker ps -f "name=demo" -a -q`\n')])])])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);