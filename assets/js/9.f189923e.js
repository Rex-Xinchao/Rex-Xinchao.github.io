(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{352:function(e,n,t){e.exports=t.p+"assets/img/fetch.cef97f05.png"},383:function(e,n,t){"use strict";t.r(n);var o=t(42),r=Object(o.a)({},(function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p"),o("div",{staticClass:"table-of-contents"},[o("ul",[o("li",[o("a",{attrs:{href:"#兼容性"}},[e._v("兼容性")])]),o("li",[o("a",{attrs:{href:"#fetch-常用配置项"}},[e._v("fetch 常用配置项")])]),o("li",[o("a",{attrs:{href:"#fetch-配置化"}},[e._v("fetch 配置化")])])])]),o("p"),e._v(" "),o("h3",{attrs:{id:"兼容性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[e._v("#")]),e._v(" 兼容性")]),e._v(" "),o("p",[o("img",{attrs:{src:t(352),alt:"alt text",title:"Fetch兼容性"}})]),e._v(" "),o("h3",{attrs:{id:"fetch-常用配置项"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#fetch-常用配置项"}},[e._v("#")]),e._v(" fetch 常用配置项")]),e._v(" "),o("ul",[o("li",[e._v("method: 请求使用的方法，如 GET、POST。")]),e._v(" "),o("li",[e._v("headers: 请求的头信息。")]),e._v(" "),o("li",[e._v("body: 请求的 body 信息。"),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("GET 或 HEAD 方法的请求不能包含 body 信息。")])])]),e._v(" "),o("li",[e._v("mode: 请求的模式。"),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("cors、 no-cors 或者 same-origin")])])]),e._v(" "),o("li",[e._v("credentials: 请求的 credentials。"),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")])])]),e._v(" "),o("li",[e._v("omit、same-origin 或者 include")]),e._v(" "),o("li",[e._v("为了在当前域名内自动发送 cookie ， 必须提供这个选项\n:::")]),e._v(" "),o("li",[e._v("cache: 请求的 cache 模式。"),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("default 、 no-store 、 reload 、 no-cache 、 force-cache 或者 only-if-cached")])])]),e._v(" "),o("li",[e._v("redirect: 可用的 redirect 模式。"),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")])])]),e._v(" "),o("li",[e._v("follow (自动重定向)")]),e._v(" "),o("li",[e._v("error (如果产生重定向将自动终止并且抛出一个错误)")]),e._v(" "),o("li",[e._v("manual (手动处理重定向)\n:::")]),e._v(" "),o("li",[e._v("referrer: 一个 USVString。"),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")])])]),e._v(" "),o("li",[e._v("no-referrer、client 或一个 URL。")]),e._v(" "),o("li",[e._v("默认是 client。\n:::")]),e._v(" "),o("li",[e._v("referrerPolicy: 指定了 HTTP 头部 referer 字段的值。")])]),e._v(" "),o("h3",{attrs:{id:"fetch-配置化"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#fetch-配置化"}},[e._v("#")]),e._v(" fetch 配置化")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("import store from './store'\nimport router from './router'\n\nfunction toUnderline (key) {\n  return key.replace(/([A-Z])/g, '_$1').toLowerCase();\n}\n\nfunction toQueryString (obj) {\n  if (obj === null) {\n    return ''\n  }\n  if (typeof obj === 'function') {\n    return toQueryString(obj())\n  }\n  let kv = []\n  for (let key of Object.keys(obj)) {\n    let val = obj[key]\n    if (val instanceof Array) {\n      for (let v of val) {\n        kv.push(encodeURIComponent(toUnderline(key)) + '[]=' + encodeURIComponent(valueOf(v)))\n      }\n    } else {\n      kv.push(encodeURIComponent(toUnderline(key)) + '=' + encodeURIComponent(valueOf(val)))\n    }\n  }\n  return kv.join('&')\n}\n\nfunction valueOf (obj) {\n  if (obj === null || typeof obj === 'undefined') {\n    return ''\n  }\n  if (typeof obj === 'function') {\n    return valueOf(obj())\n  }\n  return obj.toString()\n}\n\nfunction handleActionDenied () {\n  router.push('Login')\n}\n\nfunction handleServerError (statusText) {\n  console.warn('Request Error due to ' + (statusText || 'Server Error'))\n}\n\nfunction handleUnsupported (statusText) {\n  console.warn('Request Error' + (statusText ? ' due to ' + statusText : '') + '.')\n}\n\nfunction error (status, statusText, response) {\n  if (status <= 199) {\n    console.info(statusText)\n  } else if (status >= 200 && status <= 299) {\n    console.info(statusText)\n  } else if (status >= 300 && status <= 399) {\n    if (typeof response === 'string') {\n      location.href = response\n    } else if (response && response.redirect_url) {\n      location.href = response.redirect_url\n    } else {\n      location.href = '/'\n    }\n  } else if (status >= 400 && status <= 499) {\n    switch (status) {\n      case 401:\n        location.href = store.state.path.loginPage + '?redirect=' + encodeURIComponent(location.href)\n        break;\n      case 403:\n        handleActionDenied(statusText)\n        break;\n      default:\n        let e = new Error(statusText)\n        e.response = response\n        throw e\n    }\n  } else if (status >= 500 && status <= 599) {\n    handleServerError(statusText)\n  } else {\n    handleUnsupported(statusText)\n  }\n}\n\nfunction getJson (url, params, complete) {\n  let queryString = toQueryString(params)\n  if (queryString.length > 0) {\n    url = url + (url.indexOf('?') > 0 ? '' : '?') + queryString\n  }\n\n  let options = {\n    method: 'GET',\n    cache: 'no-cache',\n    mode: store.state.cors ? 'cors' : 'same-origin',\n    credentials: store.state.cors ? 'include' : 'same-origin',\n    headers: {\n      'Authorization': store.state.authorization,\n      'Accept': 'application/json'\n    }\n  }\n\n  return _fetchJson(url, options, complete)\n}\n\nfunction get (url, params, complete) {\n  let queryString = toQueryString(params)\n  if (queryString.length > 0) {\n    url = url + (url.indexOf('?') > 0 ? '' : '?') + queryString\n  }\n\n  let options = {\n    method: 'GET',\n    cache: 'no-cache',\n    mode: store.state.cors ? 'cors' : 'same-origin',\n    credentials: store.state.cors ? 'include' : 'same-origin',\n    headers: {\n      'Authorization': store.state.authorization\n    }\n  }\n\n  return _fetch(url, options, complete)\n}\n\nfunction postJson (url, params, complete, useCache) {\n  params = params || {}\n\n  let data = new FormData()\n  for (let key of Object.keys(params)) {\n    data.append(key, params[key])\n  }\n\n  let options = {\n    method: 'POST',\n    cache: 'no-cache',\n    mode: store.state.cors ? 'cors' : 'same-origin',\n    credentials: store.state.cors ? 'include' : 'same-origin',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': store.state.authorization,\n      'Accept': 'application/json'\n    },\n    body: toQueryString(params)\n  }\n\n  return _fetchJson(url, options, complete, useCache !== false)\n}\n\nfunction post (url, params, complete, useCache) {\n  params = params || {}\n\n  let data = new FormData()\n  for (let key of Object.keys(params)) {\n    data.append(key, params[key])\n  }\n\n  let options = {\n    method: 'POST',\n    cache: 'no-cache',\n    mode: store.state.cors ? 'cors' : 'same-origin',\n    credentials: store.state.cors ? 'include' : 'same-origin',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': store.state.authorization\n    },\n    body: toQueryString(params)\n  }\n\n  return _fetch(url, options, complete, useCache !== false)\n}\n\nfunction _fetchJson (url, options, complete) {\n  return new Promise(function (resolve, reject) {\n    fetch(url, options).then(function (response) {\n      if (response.ok) {\n        return response\n      } else {\n        error(response.status, response.statusText, response)\n      }\n    }, function (e) {\n      let error = new Error(e)\n      error.fetchFailed = true\n      throw error\n    }).then(response => response.json()).then(data => {\n      resolve(data)\n      typeof complete === 'function' && complete()\n    }).catch(function (e) {\n      if (e.fetchFailed) {\n        let data = {\n          message: '请求失败',\n          response: e.response\n        }\n        reject(data)\n      } else {\n        e.response.json().then(data => reject(data))\n      }\n      typeof complete === 'function' && complete()\n    })\n  })\n}\n\nfunction _fetch (url, options, complete) {\n  return new Promise(function (resolve, reject) {\n    fetch(url, options).then(function (response) {\n      if (response.ok) {\n        return response\n      } else {\n        error(response.status, response.statusText, response)\n      }\n    }, function (e) {\n      let error = new Error(e)\n      error.fetchFailed = true\n      throw error\n    }).then(response => {\n      resolve(response)\n      typeof complete === 'function' && complete()\n    }).catch(function (e) {\n      reject(e.response)\n      typeof complete === 'function' && complete()\n    })\n  })\n}\n\nexport {get, getJson, post, postJson}\n\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);