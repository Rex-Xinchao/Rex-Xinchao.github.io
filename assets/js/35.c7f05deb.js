(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{395:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("ul",[e("li",[e("a",{attrs:{href:"https://git-scm.com/downloads",title:"Git 官网下载",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 安装"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://tortoisegit.org/download/",title:"TortoiseGit 下载",target:"_blank",rel:"noopener noreferrer"}},[t._v("TortoiseGit 安装"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("点击查看 Git 常用指令")]),t._v(" "),e("ul",[e("li",[t._v("$ git log (如果 log 多的时候，超过屏幕，想要退出的时候，按 Q)")]),t._v(" "),e("li",[t._v("$ git status (查看当前本地的文件状态，红色为修改)")]),t._v(" "),e("li",[t._v("$ git add . (添加所有修改文件到缓存区)")]),t._v(" "),e("li",[t._v("$ git commit -m '提交描述' (添加本次提交的描述)")]),t._v(" "),e("li",[t._v("$ git push origin master (向远程 master 分支，推送版本)")]),t._v(" "),e("li",[t._v("$ git pull origin master (获取当前 master 分支的最新代码)")]),t._v(" "),e("li",[t._v("$ git branch develop (创建 develop 分支)")]),t._v(" "),e("li",[t._v("$ git checkout develop (切换到 develop 分支)")]),t._v(" "),e("li",[t._v("$ git push origin develop (将 develop 分支推到远程)")]),t._v(" "),e("li",[t._v("$ git branch -a (显示所有远程和本地分支，白色和绿色的表示为本地的，红色的表示为远程)")]),t._v(" "),e("li",[t._v("$ git fetch -p (强制更新本地所有分支)")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("安装完 git 一定还要初始化 git 指令，必须要做，否则以后会很麻烦")]),t._v(" "),e("ul",[e("li",[t._v('设置全局的用户名 $ git config --global user.name "rexSun"')]),t._v(" "),e("li",[t._v('设置全局的邮箱名 $ git config --global user.email "13601935905@qq.com"')]),t._v(" "),e("li",[t._v("设置的用户名和邮箱是 git 提交时显示的名称和联系方式，和 github 和账号无关")])])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git-rebase 流程")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在当前仓库点击 fork 按钮创建私人分支")]),t._v("\ngit clone fork地址\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加上游")]),t._v("\ngit remote add upstream 上游git地址\ngit remote -v\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fetch && rebase上游代码")]),t._v("\ngit fetch upstream\ngit rebase upstream/master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解决冲突并提交代码")]),t._v("\ngit push orign master\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git生成密钥")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成第1个ssh key")]),t._v("\nssh-keygen -t rsa -C "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yourmail@email.com"')]),t._v("  -f ~/.ssh/id_rsa_gitlab\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成第2个ssh key 指定生成文件的名称为id_rsa_private")]),t._v("\nssh-keygen -t rsa -C "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yourmail@email.com"')]),t._v("  -f ~/.ssh/id_rsa_github\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 ~/.ssh 目录下新建一个config文件，文件内容如下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gitlab")]),t._v("\nHost gitlab.com\nHostName gitlab.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_gitlab\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# github")]),t._v("\nHost github.com\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最后将对应密钥添加到github 和gitlab上")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);